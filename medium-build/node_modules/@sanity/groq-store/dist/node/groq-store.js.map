{"version":3,"file":"groq-store.js","sources":["../../src/listen.ts","../../src/drafts.ts","../../src/patch.ts","../../src/syncingDataset.ts","../../src/groqStore.ts","../../src/exportUtils.ts","../../src/node/getDocuments.ts","../../src/node/support.ts","../../src/index.ts"],"sourcesContent":["import {Subscription, MutationEvent, Config, ApiError, EnvImplementations} from './types'\n\ntype EventSourceInstance = InstanceType<EnvImplementations['EventSource']>\n\nconst isNativeBrowserEventSource = (\n  eventSource: EventSourceInstance\n): eventSource is InstanceType<typeof globalThis.EventSource> =>\n  typeof window !== 'undefined' &&\n  eventSource.addEventListener === window.EventSource.prototype.addEventListener\n\nconst addEventSourceListener = (\n  eventSource: EventSourceInstance,\n  type: string,\n  listener: EventListener\n): void => {\n  if (isNativeBrowserEventSource(eventSource)) {\n    eventSource.addEventListener(type, listener, false)\n  }\n\n  // Polyfilled event source does not accept option parameter\n  eventSource.addEventListener(type, listener)\n}\n\nexport function listen(\n  EventSourceImpl: EnvImplementations['EventSource'],\n  config: Config,\n  handlers: {\n    open: () => void\n    error: (err: Error) => void\n    next: (event: MutationEvent) => void\n  }\n): Subscription {\n  const {projectId, dataset, token} = config\n  const headers = token ? {Authorization: `Bearer ${token}`} : undefined\n  const url = `https://${projectId}.api.sanity.io/v1/data/listen/${dataset}?query=*&effectFormat=mendoza`\n  const es = new EventSourceImpl(url, {withCredentials: true, headers})\n\n  addEventSourceListener(es, 'welcome', handlers.open)\n\n  addEventSourceListener(es, 'mutation', getMutationParser(handlers.next))\n\n  addEventSourceListener(es, 'channelError', (msg: any) => {\n    es.close()\n\n    let data\n    try {\n      data = JSON.parse(msg.data) as ApiError\n    } catch (err) {\n      handlers.error(new Error('Unknown error parsing listener message'))\n      return\n    }\n\n    handlers.error(\n      new Error(data.message || data.error || `Listener returned HTTP ${data.statusCode}`)\n    )\n  })\n\n  addEventSourceListener(es, 'error', (err: Event) => {\n    const origin = typeof window !== 'undefined' && window.location.origin\n    const hintSuffix = origin ? `, and that the CORS-origin (${origin}) is allowed` : ''\n    const errorMessage = isErrorLike(err) ? ` (${err.message})` : ''\n    handlers.error(\n      new Error(\n        `Error establishing listener - check that the project ID and dataset are correct${hintSuffix}${errorMessage}`\n      )\n    )\n  })\n\n  return {\n    unsubscribe: (): Promise<void> => Promise.resolve(es.close()),\n  }\n}\n\nfunction getMutationParser(cb: (event: MutationEvent) => void): (msg: any) => void {\n  return (msg: any) => {\n    let data\n    try {\n      data = JSON.parse(msg.data)\n    } catch (err) {\n      // intentional noop\n      return\n    }\n\n    cb(data)\n  }\n}\n\nfunction isErrorLike(err: unknown): err is {message: string} {\n  return typeof err === 'object' && err !== null && 'message' in err\n}\n","import {SanityDocument} from '@sanity/types'\n\nexport function isDraft(doc: SanityDocument): boolean {\n  return doc._id.startsWith('drafts.')\n}\n\nexport function getPublishedId(document: SanityDocument): string {\n  return isDraft(document) ? document._id.slice(7) : document._id\n}\n","import {SanityDocument} from '@sanity/types'\nimport {applyPatch} from 'mendoza'\n\nexport function applyPatchWithoutRev(\n  doc: SanityDocument | null,\n  patch: unknown[]\n): SanityDocument | null {\n  const patchDoc = {...doc} as Omit<SanityDocument, '_rev'>\n  delete patchDoc._rev\n  return applyPatch(patchDoc, patch)\n}\n","import {SanityDocument} from '@sanity/types'\nimport {listen} from './listen'\nimport {getPublishedId} from './drafts'\nimport {applyPatchWithoutRev} from './patch'\nimport {Config, EnvImplementations, MutationEvent, Subscription} from './types'\n\nconst DEBOUNCE_MS = 25\n\nfunction noop() {\n  return Promise.resolve()\n}\n\nexport function getSyncingDataset(\n  config: Config,\n  onNotifyUpdate: (docs: SanityDocument[]) => void,\n  {getDocuments, EventSource}: EnvImplementations\n): Subscription & {loaded: Promise<void>} {\n  const {projectId, dataset, listen: useListener, overlayDrafts, documentLimit, token} = config\n\n  if (!useListener) {\n    const loaded = getDocuments({projectId, dataset, documentLimit, token})\n      .then(onUpdate)\n      .then(noop)\n    return {unsubscribe: noop, loaded}\n  }\n\n  const indexedDocuments = new Map<string, SanityDocument>()\n\n  // undefined until the listener has been set up and the initial export is done\n  let documents: SanityDocument[] | undefined\n\n  // holds any mutations that happen while fetching documents so they can be applied after updates\n  const buffer: MutationEvent[] = []\n\n  // Return a promise we can resolve once we've established a listener and reconciled any mutations\n  let onDoneLoading: () => void\n  let onLoadError: (error: Error) => void\n  const loaded = new Promise<void>((resolve, reject) => {\n    onDoneLoading = resolve\n    onLoadError = reject\n  })\n\n  // We don't want to flush updates while we're in the same transaction, so a normal\n  // throttle/debounce wouldn't do it. We need to wait and see if the next mutation is\n  // within the same transaction as the previous, and if not we can flush. Of course,\n  // we can't wait forever, so an upper threshold of X ms should be counted as \"ok to flush\"\n  let stagedDocs: SanityDocument[] | undefined\n  let previousTrx: string | undefined\n  let flushTimeout: number | undefined\n\n  const listener = listen(EventSource, config, {\n    next: onMutationReceived,\n    open: onOpen,\n    error: (error: Error) => onLoadError(error),\n  })\n\n  return {unsubscribe: listener.unsubscribe, loaded}\n\n  async function onOpen() {\n    const initial = await getDocuments({projectId, dataset, documentLimit, token})\n    documents = applyBufferedMutations(initial, buffer)\n    documents.forEach((doc) => indexedDocuments.set(doc._id, doc))\n    onUpdate(documents)\n    onDoneLoading()\n  }\n\n  function onMutationReceived(msg: MutationEvent) {\n    if (documents) {\n      applyMutation(msg)\n      scheduleUpdate(documents, msg)\n    } else {\n      buffer.push(msg)\n    }\n  }\n\n  function scheduleUpdate(docs: SanityDocument[], msg: MutationEvent) {\n    clearTimeout(flushTimeout)\n\n    if (previousTrx !== msg.transactionId && stagedDocs) {\n      // This is a new transaction, meaning we can immediately flush any pending\n      // doc updates if there are any\n      onUpdate(stagedDocs)\n      previousTrx = undefined\n    } else {\n      previousTrx = msg.transactionId\n      stagedDocs = docs.slice()\n    }\n\n    flushTimeout = setTimeout(onUpdate, DEBOUNCE_MS, docs.slice())\n  }\n\n  function onUpdate(docs: SanityDocument[]) {\n    stagedDocs = undefined\n    flushTimeout = undefined\n    previousTrx = undefined\n    onNotifyUpdate(overlayDrafts ? overlay(docs) : docs)\n  }\n\n  function applyMutation(msg: MutationEvent) {\n    if (!msg.effects || msg.documentId.startsWith('_.')) {\n      return\n    }\n\n    const document = indexedDocuments.get(msg.documentId) || null\n    replaceDocument(msg.documentId, applyPatchWithoutRev(document, msg.effects.apply))\n  }\n\n  function replaceDocument(id: string, document: SanityDocument | null) {\n    const current = indexedDocuments.get(id)\n    const docs = documents || []\n    const position = current ? docs.indexOf(current) : -1\n\n    if (position === -1 && document) {\n      // Didn't exist previously, but was now created. Add it.\n      docs.push(document)\n      indexedDocuments.set(id, document)\n    } else if (document) {\n      // Existed previously and still does. Replace it.\n      docs.splice(position, 1, document)\n      indexedDocuments.set(id, document)\n    } else {\n      // Existed previously, but is now deleted. Remove it.\n      docs.splice(position, 1)\n      indexedDocuments.delete(id)\n    }\n  }\n}\n\nfunction applyBufferedMutations(\n  documents: SanityDocument[],\n  mutations: MutationEvent[]\n): SanityDocument[] {\n  // Group by document ID\n  const groups = new Map<string, MutationEvent[]>()\n  mutations.forEach((mutation) => {\n    const group = groups.get(mutation.documentId) || []\n    group.push(mutation)\n    groups.set(mutation.documentId, group)\n  })\n\n  // Discard all mutations that happened before our current document\n  groups.forEach((group, id) => {\n    const document = documents.find((doc) => doc._id === id)\n    if (!document) {\n      // @todo handle\n      // eslint-disable-next-line no-console\n      console.warn('Received mutation for missing document %s', id)\n      return\n    }\n\n    // Mutations are sorted by timestamp, apply any that arrived after\n    // we fetched the initial documents\n    let hasFoundRevision = false\n    let current: SanityDocument | null = document\n    group.forEach((mutation) => {\n      hasFoundRevision = hasFoundRevision || mutation.previousRev === document._rev\n      if (!hasFoundRevision) {\n        return\n      }\n\n      if (mutation.effects) {\n        current = applyPatchWithoutRev(current, mutation.effects.apply)\n      }\n    })\n\n    // Replace the indexed documents\n    documents.splice(documents.indexOf(document), 1, current)\n  })\n\n  return documents\n}\n\nfunction overlay(documents: SanityDocument[]): SanityDocument[] {\n  const overlayed = new Map<string, SanityDocument>()\n\n  documents.forEach((doc) => {\n    const existing = overlayed.get(getPublishedId(doc))\n    if (doc._id.startsWith('drafts.')) {\n      // Drafts always overlay\n      overlayed.set(getPublishedId(doc), pretendThatItsPublished(doc))\n    } else if (!existing) {\n      // Published documents only override if draft doesn't exist\n      overlayed.set(doc._id, doc)\n    }\n  })\n\n  return Array.from(overlayed.values())\n}\n\n// Strictly speaking it would be better to allow groq-js to resolve `draft.<id>`,\n// but for now this will have to do\nfunction pretendThatItsPublished(doc: SanityDocument): SanityDocument {\n  return {...doc, _id: getPublishedId(doc)}\n}\n","import groq from 'groq'\nimport deepEqual from 'fast-deep-equal'\nimport {throttle} from 'throttle-debounce'\nimport {SanityDocument} from '@sanity/types'\nimport {parse, evaluate} from 'groq-js'\nimport {Config, EnvImplementations, GroqSubscription, GroqStore, Subscription} from './types'\nimport {getSyncingDataset} from './syncingDataset'\n\nexport function groqStore(config: Config, envImplementations: EnvImplementations): GroqStore {\n  let documents: SanityDocument[] = []\n  const executeThrottled = throttle(config.subscriptionThrottleMs || 50, executeAllSubscriptions)\n  const activeSubscriptions: GroqSubscription[] = []\n\n  let dataset: Subscription & {loaded: Promise<void>}\n\n  async function loadDataset() {\n    if (!dataset) {\n      dataset = getSyncingDataset(\n        config,\n        (docs) => {\n          documents = docs\n          executeThrottled()\n        },\n        envImplementations\n      )\n    }\n\n    await dataset.loaded\n  }\n\n  async function query<R = any>(groqQuery: string, params?: Record<string, unknown>): Promise<R> {\n    await loadDataset()\n    const tree = parse(groqQuery, {params})\n    const result = await evaluate(tree as any, {dataset: documents, params})\n    return result.get()\n  }\n\n  async function getDocument(documentId: string): Promise<SanityDocument | null> {\n    await loadDataset()\n    return query(groq`*[_id == $id][0]`, {id: documentId})\n  }\n\n  async function getDocuments(documentIds: string[]): Promise<(SanityDocument | null)[]> {\n    await loadDataset()\n    const subQueries = documentIds.map((id) => `*[_id == \"${id}\"][0]`).join(',\\n')\n    return query(`[${subQueries}]`)\n  }\n\n  function subscribe<R = any>(\n    groqQuery: string,\n    params: Record<string, unknown>,\n    callback: (error: Error | undefined, result?: R) => void\n  ): Subscription {\n    if (!config.listen) {\n      throw new Error('Cannot use `subscribe()` without `listen: true`')\n    }\n\n    // @todo Execute the query against an empty dataset for validation purposes\n\n    // Store the subscription so we can re-run the query on new data\n    const subscription = {query: groqQuery, params, callback}\n    activeSubscriptions.push(subscription)\n\n    let unsubscribed = false\n    const unsubscribe = () => {\n      if (unsubscribed) {\n        return Promise.resolve()\n      }\n\n      unsubscribed = true\n      activeSubscriptions.splice(activeSubscriptions.indexOf(subscription), 1)\n      return Promise.resolve()\n    }\n\n    executeQuerySubscription(subscription)\n    return {unsubscribe}\n  }\n\n  function executeQuerySubscription(subscription: GroqSubscription) {\n    return query(subscription.query, subscription.params)\n      .then((res) => {\n        if ('previousResult' in subscription && deepEqual(subscription.previousResult, res)) {\n          return\n        }\n\n        subscription.previousResult = res\n        subscription.callback(undefined, res)\n      })\n      .catch((err) => {\n        subscription.callback(err)\n      })\n  }\n\n  function executeAllSubscriptions() {\n    activeSubscriptions.forEach(executeQuerySubscription)\n  }\n\n  function close() {\n    executeThrottled.cancel()\n    return dataset ? dataset.unsubscribe() : Promise.resolve()\n  }\n\n  return {query, getDocument, getDocuments, subscribe, close}\n}\n","import {SanityDocument} from '@sanity/types'\nimport {ApiError, StreamError, StreamResult} from './types'\n\nexport function isStreamError(result: StreamResult | undefined): result is StreamError {\n  if (!result) {\n    return false\n  }\n\n  if (!('error' in result) || typeof result.error !== 'object' || result.error === null) {\n    return false\n  }\n\n  return (\n    'description' in result.error &&\n    typeof (result as StreamError).error.description === 'string' &&\n    !('_id' in result)\n  )\n}\n\nexport function getError(body: ApiError): string {\n  if (typeof body === 'object' && 'error' in body && 'message' in body) {\n    return body.message || body.error\n  }\n\n  return '<unknown error>'\n}\n\nexport function isRelevantDocument(doc: SanityDocument): boolean {\n  return !doc._id.startsWith('_.')\n}\n","import split from 'split2'\nimport get from 'simple-get'\nimport {SanityDocument} from '@sanity/types'\nimport {EnvImplementations, StreamResult} from '../types'\nimport {getError, isRelevantDocument, isStreamError} from '../exportUtils'\n\nexport const getDocuments: EnvImplementations['getDocuments'] = function getDocuments({\n  projectId,\n  dataset,\n  token,\n  documentLimit,\n}: {\n  projectId: string\n  dataset: string\n  token?: string\n  documentLimit?: number\n}): Promise<SanityDocument[]> {\n  const headers = token ? {Authorization: `Bearer ${token}`} : undefined\n\n  return new Promise((resolve, reject) => {\n    get(\n      {url: `https://${projectId}.api.sanity.io/v1/data/export/${dataset}`, headers},\n      (err, response) => {\n        if (err) {\n          reject(err)\n          return\n        }\n\n        response.setEncoding('utf8')\n\n        const chunks: Buffer[] = []\n        if (response.statusCode !== 200) {\n          response\n            .on('data', (chunk: Buffer) => chunks.push(chunk))\n            .on('end', () => {\n              const body = JSON.parse(Buffer.concat(chunks).toString('utf8'))\n              reject(new Error(`Error streaming dataset: ${getError(body)}`))\n            })\n          return\n        }\n\n        const documents: SanityDocument[] = []\n        response\n          .pipe(split(JSON.parse))\n          .on('data', (doc: StreamResult) => {\n            if (isStreamError(doc)) {\n              reject(new Error(`Error streaming dataset: ${doc.error}`))\n              return\n            }\n\n            if (doc && isRelevantDocument(doc)) {\n              documents.push(doc)\n            }\n\n            if (documentLimit && documents.length > documentLimit) {\n              reject(\n                new Error(`Error streaming dataset: Reached limit of ${documentLimit} documents`)\n              )\n              response.destroy()\n            }\n          })\n          .on('end', () => resolve(documents))\n      }\n    )\n  })\n}\n","export function assertEnvSupport(): void {\n  const [major] = process.version.replace(/^v/, '').split('.', 1).map(Number)\n  if (major < 10) {\n    throw new Error('Node.js version 10 or higher required')\n  }\n}\n","/**\n * Note: Entry point for _browser_ build is in browser/index.ts\n */\nimport EventSourcePolyfill from 'eventsource'\nimport {groqStore as groqStoreApi} from './groqStore'\nimport {Config, GroqStore} from './types'\nimport {getDocuments} from './node/getDocuments'\nimport {assertEnvSupport} from './node/support'\n\nexport function groqStore(config: Config): GroqStore {\n  assertEnvSupport()\n\n  return groqStoreApi(config, {\n    EventSource: config.EventSource ?? EventSourcePolyfill,\n    getDocuments,\n  })\n}\n\nexport {default as groq} from 'groq'\nexport {Subscription, GroqStore} from './types'\n"],"names":["isNativeBrowserEventSource","eventSource","window","addEventListener","EventSource","prototype","addEventSourceListener","type","listener","listen","EventSourceImpl","config","handlers","projectId","dataset","token","headers","Authorization","undefined","url","es","withCredentials","open","getMutationParser","next","msg","close","data","JSON","parse","err","error","Error","message","statusCode","origin","location","hintSuffix","errorMessage","isErrorLike","unsubscribe","Promise","resolve","cb","isDraft","doc","_id","startsWith","getPublishedId","document","slice","applyPatchWithoutRev","patch","patchDoc","_rev","applyPatch","DEBOUNCE_MS","noop","getSyncingDataset","onNotifyUpdate","getDocuments","useListener","overlayDrafts","documentLimit","loaded","then","onUpdate","indexedDocuments","Map","documents","buffer","onDoneLoading","onLoadError","reject","stagedDocs","previousTrx","flushTimeout","onMutationReceived","onOpen","initial","applyBufferedMutations","forEach","set","applyMutation","scheduleUpdate","push","docs","clearTimeout","transactionId","setTimeout","overlay","effects","documentId","get","replaceDocument","apply","id","current","position","indexOf","splice","delete","mutations","groups","mutation","group","find","console","warn","hasFoundRevision","previousRev","overlayed","existing","pretendThatItsPublished","Array","from","values","groqStore","envImplementations","executeThrottled","throttle","subscriptionThrottleMs","executeAllSubscriptions","activeSubscriptions","loadDataset","query","groqQuery","params","tree","result","evaluate","getDocument","groq","documentIds","subQueries","map","join","subscribe","callback","subscription","unsubscribed","executeQuerySubscription","res","deepEqual","previousResult","catch","cancel","isStreamError","description","getError","body","isRelevantDocument","response","setEncoding","chunks","on","chunk","Buffer","concat","toString","pipe","split","length","destroy","assertEnvSupport","major","process","version","replace","Number","groqStoreApi","EventSourcePolyfill"],"mappings":"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"}